{"version":3,"file":"static/js/387.d022f93b.chunk.js","mappings":"2QAGaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wTAwBhBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qE,SCqBjC,EAtCa,WAIX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,IAAsBV,GACjC,GAAE,CAACO,EAAUP,IAGXK,GAAYM,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACnBD,EAAAA,EAAAA,KAACjB,EAAI,CAAAmB,SACgB,IAAhBX,EAAKY,QAAeH,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sBACxBX,EAAKa,KAAI,SAAAC,GAA4C,IAAzCC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aAAcC,EAAEJ,EAAFI,GACzC,OAEEC,EAAAA,EAAAA,MAAA,MAAAR,SAAA,CAEKM,GAAeR,EAAAA,EAAAA,KAAA,OAAKW,IAAG,kCAAAC,OAAoCJ,GAAgBK,IAAI,aAAeb,EAAAA,EAAAA,KAAA,OAAKW,IAAK,kHAAmHE,IAAI,aAElOH,EAAAA,EAAAA,MAACvB,EAAO,CAAAe,SAAA,EACNF,EAAAA,EAAAA,KAAA,KAAAE,SAAII,KACJN,EAAAA,EAAAA,KAAA,KAAAE,SAAIK,SANCE,EAUb,KAIR,C,wVC9CO,IAAMK,EAAuB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,cAAe,EAC9DC,EAAmB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,UAAW,EACtDC,EAAiB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,QAAS,EAClDC,EAA2B,SAAAP,GAAK,OAAIA,EAAMC,SAASO,kBAAkB,EAIrEC,EAAe,SAAAT,GAAK,OAAIA,EAAMU,OAAOA,MAAO,EAC5CC,EAAoB,SAAAX,GAAK,OAAIA,EAAMU,OAAOE,UAAW,EACrDC,EAAwB,SAAAb,GAAK,OAAIA,EAAMU,OAAO/B,SAAS,EAEvDmC,EAAqB,SAAAd,GAAK,OAAIA,EAAMe,YAAY,EAChDC,EAAyB,SAAAhB,GAAK,OAAIA,EAAMe,aAAapC,SAAS,EAE9DD,EAAa,SAAAsB,GAAK,OAAIA,EAAMxB,KAAKA,IAAI,EACrCI,EAAsB,SAAAoB,GAAK,OAAIA,EAAMxB,KAAKG,SAAS,EAEnDsC,EAAgB,SAAAjB,GAAK,OAAIA,EAAMkB,QAAQA,OAAO,EAC9CC,EAAyB,SAAAnB,GAAK,OAAIA,EAAMkB,QAAQvC,SAAS,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const List = styled.ul`\nlist-style: none;\ndisplay: flex;\njustify-content: center;\nflex-wrap: wrap;\ncolumn-gap: 5px;\nrow-gap: 15px;\n\n> li{\n  width: 280px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  >img{\n    width: 80px;\n    height: 80px;\n    object-fit: cover;\n    border-radius: 50px;\n}\n\n}\n\n`\nexport const Profile = styled.div`\n>:last-child{\n  font-size: 12px;\n  color: #808080;\n}\n\n`\n","import { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { Loader } from \"components/Loader/Loader\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMovieCreditsById } from \"redux/operations\";\nimport { selectCast, selectCastIsLoading } from \"redux/selectors\";\n\nimport { List, Profile } from \"./Cast.styled\";\n\nconst Cast = () => {\n\n  // const [isLoading, setIsLoading] = useState(false)\n\n  const { movieId } = useParams();\n\n  const cast = useSelector(selectCast)\n  const isLoading = useSelector(selectCastIsLoading)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchMovieCreditsById(movieId))\n  },[dispatch, movieId])\n\n  return (\n    isLoading ? <Loader /> :\n    <List>\n      {  cast.length === 0 ? <p>No cast available</p> :\n        cast.map(({ name, character, profile_path, id }) => {\n          return (\n\n            <li key={id}>\n\n                {profile_path ? <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt=\"profile\" /> : <img src={'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'} alt=\"profile\" />}\n\n              <Profile>\n                <p>{name}</p>\n                <p>{character}</p>\n              </Profile>\n            </li>\n          )\n        })\n      }\n    </List>\n  )\n}\n\nexport default Cast;\n","export const selectTrendingMovies = state => state.homepage.trendingMovies;\nexport const selectCategories = state => state.homepage.categories;\nexport const selectTopRated = state => state.homepage.topRated;\nexport const selectTopRatedTotalPages = state => state.homepage.topRatedTotalPages\nexport const selectHomepageIsLoading = state => state.homepage.isLoading\n\n\nexport const selectMovies = state => state.movies.movies;\nexport const selectMoviesPages = state => state.movies.totalPages;\nexport const selectMoviesIsLoading = state => state.movies.isLoading\n\nexport const selectMovieDetails = state => state.movieDetails\nexport const selectDetailsIsLoading = state => state.movieDetails.isLoading\n\nexport const selectCast = state => state.cast.cast\nexport const selectCastIsLoading = state => state.cast.isLoading\n\nexport const selectReviews = state => state.reviews.reviews\nexport const selectReviewsIsLoading = state => state.reviews.isLoading\n\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Profile","_templateObject2","movieId","useParams","cast","useSelector","selectCast","isLoading","selectCastIsLoading","dispatch","useDispatch","useEffect","fetchMovieCreditsById","_jsx","Loader","children","length","map","_ref","name","character","profile_path","id","_jsxs","src","concat","alt","selectTrendingMovies","state","homepage","trendingMovies","selectCategories","categories","selectTopRated","topRated","selectTopRatedTotalPages","topRatedTotalPages","selectMovies","movies","selectMoviesPages","totalPages","selectMoviesIsLoading","selectMovieDetails","movieDetails","selectDetailsIsLoading","selectReviews","reviews","selectReviewsIsLoading"],"sourceRoot":""}