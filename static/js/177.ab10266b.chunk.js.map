{"version":3,"file":"static/js/177.ab10266b.chunk.js","mappings":"iOAGaA,EAAUC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6DAKnBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,meA6BhBG,GAAsBL,EAAAA,EAAAA,IAAOM,IAAPN,CAAqBO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iW,SCgBxD,EAlDkB,SAAHM,GAOR,IANLC,EAAMD,EAANC,OACAC,EAAOF,EAAPE,QACAC,EAAQH,EAARG,SACAC,EAAgBJ,EAAhBI,iBACAC,EAAUL,EAAVK,WACAC,EAAWN,EAAXM,YAIA,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAChB,EAAO,CAAAiB,SAAA,CAAC,IAAEN,MACXO,EAAAA,EAAAA,KAACd,EAAI,CAAAa,SACFP,EAAOS,KAAI,SAAAC,GAAiC,IAA9BC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAIC,EAAWH,EAAXG,YACxB,OACEL,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,GAAMK,MAAO,CAAEC,KAAMhB,GAAWK,SAAA,CAClDM,GACCL,EAAAA,EAAAA,KAAA,OACEW,IAAG,kCAAAH,OAAoCH,GACvCO,IAAI,YAGNZ,EAAAA,EAAAA,KAAA,OACEW,IACE,kHAEFC,IAAI,aAIRZ,EAAAA,EAAAA,KAAA,KAAAD,SAAII,QAhBCC,EAoBb,OAEFJ,EAAAA,EAAAA,KAACZ,EAAmB,CAClByB,gBAAgB,SAChBC,qBAAsB,EACtBC,mBAAoB,EACpBC,UAAWpB,EACXqB,aAActB,EACduB,UAAWrB,EAAc,MAIjC,C,yGCjDasB,EAAYpC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uEAMtBH,EAAUC,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4D,iHCgChC,UAhCkB,WAEhB,IAAMO,GAAU4B,EAAAA,EAAAA,IAAYC,EAAAA,GAEtB3B,GAAW4B,EAAAA,EAAAA,MAQjB,OACEtB,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CAAApB,UACRD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CACR9B,QAAQ,aACRD,OAAQA,EACRE,SAAUA,EACVC,iBAXe,SAAA6B,GAEvB,EAUQ5B,WAAY,MACZC,YAAY,OAGhBG,EAAAA,EAAAA,KAACyB,EAAAA,SAAQ,CAACC,UAAU1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,IAAI5B,UAC7BC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAM,UAKjB,C,8ECtCO,IAAMP,EAAkB,SAAAZ,GAAK,OAAIA,EAAMoB,SAAU,EAC3CC,EAAuB,SAAArB,GAAK,OAAIA,EAAMsB,cAAe,C","sources":["components/MovieList/MovileList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.js","pages/WatchList/WatchList.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const Heading = styled.h1`\n  font-weight: 300;\n  text-transform: uppercase;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 5px;\n  row-gap: 15px;\n  justify-content: center;\n\n  > li {\n    width: 280px;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n\n    > a {\n      width: 250px;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      text-decoration: none;\n      color: white;\n      > img {\n        width: 250px;\n        height: 372px;\n      }\n    }\n  }\n`;\n\nexport const StyledReactPaginate = styled(ReactPaginate)`\n  list-style: none;\n  display: flex;\n  gap: 15px;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  font-size: 26px;\n  color: white;\n  margin: 50px auto;\n  cursor: pointer;\n  > .active {\n    box-shadow:\n      rgba(240, 46, 170, 0.5) 0px 5px,\n      rgba(240, 46, 170, 0.3) 0px 10px;\n    padding: 5px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Heading, List, StyledReactPaginate } from './MovileList.styled';\n\nconst MovieList = ({\n  movies,\n  heading,\n  location,\n  handlePageChange,\n  totalPages,\n  currentPage,\n}) => {\n\n\n  return (\n    <div>\n      <Heading> {heading}</Heading>\n      <List>\n        {movies.map(({ title, id, poster_path }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {poster_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt=\"poster\"\n                  />\n                ) : (\n                  <img\n                    src={\n                      'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                    }\n                    alt=\"profile\"\n                  />\n                )}\n\n                <p>{title}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </List>\n      <StyledReactPaginate\n        activeClassName=\"active\"\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={2}\n        pageCount={totalPages}\n        onPageChange={handlePageChange}\n        forcePage={currentPage - 1}\n      />\n    </div>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Heading = styled.h1`\n  font-weight: 300;\n  text-transform: uppercase;\n`;\n","import { Suspense } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Container} from '../Movies/Movies.styled';\nimport { selectWatchList } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\n\nconst WatchList = () => {\n\n  const movies =  useSelector(selectWatchList)\n\n  const location = useLocation();\n\n\n\n  const handlePageChange = selectedPage => {\n\n    };\n\n  return (\n    <Container>\n      <div>\n          <MovieList\n            heading=\"Watch List\"\n            movies={movies}\n            location={location}\n            handlePageChange={handlePageChange}\n            totalPages= \"500\"\n            currentPage=\"1\"\n          />\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </Container>\n  );\n};\n\nexport default WatchList;\n","export const selectWatchList = state => state.watchList;\nexport const selectRecentlyViewed = state => state.recentlyViewed;\n\n"],"names":["Heading","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","StyledReactPaginate","ReactPaginate","_templateObject3","_ref","movies","heading","location","handlePageChange","totalPages","currentPage","_jsxs","children","_jsx","map","_ref2","title","id","poster_path","Link","to","concat","state","from","src","alt","activeClassName","marginPagesDisplayed","pageRangeDisplayed","pageCount","onPageChange","forcePage","Container","useSelector","selectWatchList","useLocation","MovieList","selectedPage","Suspense","fallback","Loader","Outlet","watchList","selectRecentlyViewed","recentlyViewed"],"sourceRoot":""}