{"version":3,"file":"static/js/873.2a99ee80.chunk.js","mappings":"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","sources":["components/MovieList/MovileList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.styles.js","pages/Movies/Movies.jsx","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport ReactPaginate from \"react-paginate\";\n\n\nexport const Heading = styled.h1`\n  font-weight: 300;\n  text-transform: uppercase;\n`\n\nexport const List = styled.ul`\nlist-style: none;\ndisplay: flex;\nflex-wrap: wrap;\ncolumn-gap: 5px;\nrow-gap: 15px;\njustify-content: center;\n\n> li{\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  >a{\n  width: 250px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-decoration: none;\n  color: white;\n  >img{\n    width: 250px;\n    height: 372px;\n  }\n  }\n\n\n}\n\n`\n\n\nexport const StyledReactPaginate = styled(ReactPaginate)`\nlist-style: none;\n     display: flex;\n     gap: 15px;\n     flex-wrap: nowrap;\n     align-items: center;\n     justify-content: center;\n     font-size: 26px;\n     color: white;\n     margin: 50px auto;\n     cursor: pointer;\n     >.active{\n\n      box-shadow: rgba(240, 46, 170, 0.5) 0px 5px, rgba(240, 46, 170, 0.3) 0px 10px;\n      padding: 5px;\n     }\n`;\n","import { Link } from \"react-router-dom\";\nimport { Heading, List, StyledReactPaginate } from \"./MovileList.styled\";\n\nconst MovieList = ({ movies, heading,  location, handlePageChange, totalPages, currentPage }) => {\n\n\n  return (\n    <div>\n      <Heading> {heading}</Heading>\n     <List>\n        {movies.map(({ title, id, poster_path }) => {\n          return (\n            <li key={id}>\n                <Link to={`/movies/${id}`}\n                  state={{ from: location }}\n                >\n                  {poster_path ? <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"poster\" /> : <img src={'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'} alt=\"profile\" />}\n\n                <p>{title}</p>\n              </Link>\n            </li>\n          )\n        })}\n\n      </List>\n      <StyledReactPaginate\n        activeClassName=\"active\"\n        marginPagesDisplayed ={1}\n        pageRangeDisplayed={2}\n        pageCount={totalPages}\n        onPageChange={handlePageChange}\n        forcePage={currentPage-1}\n    />\n\n      </div>\n  )\n}\n\nexport default MovieList;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Heading = styled.h1`\n  font-weight: 300;\n  text-transform: uppercase;\n`\n","import { useEffect, useState, Suspense } from \"react\";\nimport { Outlet, useSearchParams, useLocation } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMovieByName, fetchMoviesByGenre } from \"redux/operations\";\nimport { selectMovies, selectMoviesPages, selectMoviesIsLoading } from \"redux/selectors\";\n\nimport { Loader } from \"components/Loader/Loader\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport { Container, Heading } from \"./Movies.styles\"\n\nconst Movies = () => {\n\n  const [heading, setHeading] = useState('')\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get(\"query\") ?? \"\"\n  const searchGenre = searchParams.get(\"genre\") ?? \"\"\n  const genreName = searchParams.get(\"name\") ?? \"\"\n  const page = searchParams.get(\"page\") ?? \"\"\n\n  const location = useLocation();\n\n  const isLoading = useSelector(selectMoviesIsLoading)\n  const movies = useSelector(selectMovies)\n  const totalPages = useSelector(selectMoviesPages)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n\n    if (searchQuery !== '') {\n    const search = {\n      name: searchQuery,\n      page\n    }\n    dispatch(fetchMovieByName(search))\n    setHeading(searchQuery)\n  } else if (searchGenre !== '') {\n    const search = {\n      genre: searchGenre,\n      page\n    }\n    dispatch(fetchMoviesByGenre(search))\n    setHeading(genreName)\n  }\n\n  },[dispatch, searchQuery, searchGenre, genreName, page])\n\n  const handlePageChange = (selectedPage) => {\n    const chosenPage = selectedPage.selected + 1\n\n    const newSearchParams = {\n  page: chosenPage,\n};\n\nsetSearchParams((prevParams) => {\n  return new URLSearchParams({\n    ...Object.fromEntries(prevParams.entries()),\n    ...newSearchParams,\n  });\n});\n  };\n\n\n  return (\n    isLoading ? <Loader /> :\n    <Container>\n      <div>\n          {movies.length === 0 ? <Heading> No movies found </Heading> :\n\n            <MovieList\n          heading={ heading }\n          movies={movies}\n          searchQuery={searchQuery}\n          location={location}\n          handlePageChange={handlePageChange}\n          totalPages={totalPages}\n          currentPage={page}\n        />}\n\n\n      <Suspense fallback={<Loader/>}>\n        <Outlet />\n        </Suspense>\n      </div>\n      </Container>\n  )\n}\n\nexport default Movies;\n","export const selectTrendingMovies = state => state.homepage.trendingMovies;\nexport const selectCategories = state => state.homepage.categories;\nexport const selectTopRated = state => state.homepage.topRated;\nexport const selectTopRatedTotalPages = state => state.homepage.topRatedTotalPages\nexport const selectHomepageIsLoading = state => state.homepage.isLoading\n\n\nexport const selectMovies = state => state.movies.movies;\nexport const selectMoviesPages = state => state.movies.totalPages;\nexport const selectMoviesIsLoading = state => state.movies.isLoading\n\nexport const selectMovieDetails = state => state.movieDetails\nexport const selectDetailsIsLoading = state => state.movieDetails.isLoading\n\nexport const selectCast = state => state.cast.cast\nexport const selectCastIsLoading = state => state.cast.isLoading\n\nexport const selectReviews = state => state.reviews.reviews\nexport const selectReviewsIsLoading = state => state.reviews.isLoading\n\n"],"names":["Heading","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","StyledReactPaginate","ReactPaginate","_templateObject3","_ref","movies","heading","location","handlePageChange","totalPages","currentPage","_jsxs","children","_jsx","map","_ref2","title","id","poster_path","Link","to","concat","state","from","src","alt","activeClassName","marginPagesDisplayed","pageRangeDisplayed","pageCount","onPageChange","forcePage","Container","_searchParams$get","_searchParams$get2","_searchParams$get3","_searchParams$get4","_useState","useState","_useState2","_slicedToArray","setHeading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchQuery","get","searchGenre","genreName","page","useLocation","isLoading","useSelector","selectMoviesIsLoading","selectMovies","selectMoviesPages","dispatch","useDispatch","useEffect","search","name","fetchMovieByName","genre","fetchMoviesByGenre","Loader","length","MovieList","selectedPage","newSearchParams","selected","prevParams","URLSearchParams","_objectSpread","Object","fromEntries","entries","Suspense","fallback","Outlet","selectTrendingMovies","homepage","trendingMovies","selectCategories","categories","selectTopRated","topRated","selectTopRatedTotalPages","topRatedTotalPages","selectMovieDetails","movieDetails","selectDetailsIsLoading","selectCast","cast","selectCastIsLoading","selectReviews","reviews","selectReviewsIsLoading"],"sourceRoot":""}